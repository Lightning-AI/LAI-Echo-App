{
  "openapi": "3.0.2",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/state": {
      "get": {
        "summary": "Get State",
        "operationId": "get_state_api_v1_state_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Type",
              "type": "string"
            },
            "name": "x-lightning-type",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Session-Uuid",
              "type": "string"
            },
            "name": "x-lightning-session-uuid",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Session-Id",
              "type": "string"
            },
            "name": "x-lightning-session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Post State",
        "operationId": "post_state_api_v1_state_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Type",
              "type": "string"
            },
            "name": "x-lightning-type",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Session-Uuid",
              "type": "string"
            },
            "name": "x-lightning-session-uuid",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Session-Id",
              "type": "string"
            },
            "name": "x-lightning-session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spec": {
      "get": {
        "summary": "Get Spec",
        "operationId": "get_spec_api_v1_spec_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Session-Uuid",
              "type": "string"
            },
            "name": "x-lightning-session-uuid",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Session-Id",
              "type": "string"
            },
            "name": "x-lightning-session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delta": {
      "post": {
        "summary": "Post Delta",
        "description": "This endpoint is used to make an update to the app state using delta diff, mainly used by streamlit to\nupdate the state.",
        "operationId": "post_delta_api_v1_delta_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Type",
              "type": "string"
            },
            "name": "x-lightning-type",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Session-Uuid",
              "type": "string"
            },
            "name": "x-lightning-session-uuid",
            "in": "header"
          },
          {
            "required": false,
            "schema": {
              "title": "X-Lightning-Session-Id",
              "type": "string"
            },
            "name": "x-lightning-session-id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/upload_file/{filename}": {
      "put": {
        "summary": "Upload File",
        "operationId": "upload_file_api_v1_upload_file__filename__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Filename",
              "type": "string"
            },
            "name": "filename",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_api_v1_upload_file__filename__put"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Healthz",
        "description": "Health check endpoint used in the cloud FastAPI servers to check the status periodically. This requires\nRedis to be installed for it to work.\n\n# TODO - Once the state store abstraction is in, check that too",
        "operationId": "healthz_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/command/create_echo": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Create Echo",
        "operationId": "create_echo_command_create_echo_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Echo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "cls_name": "CreateEcho",
        "cls_path": "/home/alec/work/Lightning-AI/LAI-Echo-App/echo/commands/echo.py"
      }
    },
    "/command/list_echoes": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "List Echoes",
        "operationId": "list_echoes_command_list_echoes_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "cls_name": "ListEchoes",
        "cls_path": "/home/alec/work/Lightning-AI/LAI-Echo-App/echo/commands/echo.py"
      }
    },
    "/command/get_echo": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Get Echo",
        "operationId": "get_echo_command_get_echo_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetEchoConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "cls_name": "GetEcho",
        "cls_path": "/home/alec/work/Lightning-AI/LAI-Echo-App/echo/commands/echo.py"
      }
    },
    "/command/delete_echo": {
      "post": {
        "tags": ["app_client_command"],
        "summary": "Delete Echo",
        "operationId": "delete_echo_command_delete_echo_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEchoConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "cls_name": "DeleteEcho",
        "cls_path": "/home/alec/work/Lightning-AI/LAI-Echo-App/echo/commands/echo.py"
      }
    },
    "/api{full_path}": {
      "get": {
        "summary": "Api Catch All",
        "operationId": "api_catch_all_api_full_path__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Full Path",
              "type": "string"
            },
            "name": "full_path",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{full_path}": {
      "get": {
        "summary": "Frontend Route",
        "operationId": "frontend_route__full_path__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Full Path",
              "type": "string"
            },
            "name": "full_path",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_upload_file_api_v1_upload_file__filename__put": {
        "title": "Body_upload_file_api_v1_upload_file__filename__put",
        "required": ["uploaded_file"],
        "type": "object",
        "properties": {
          "uploaded_file": {
            "title": "Uploaded File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "DeleteEchoConfig": {
        "title": "DeleteEchoConfig",
        "required": ["echoId"],
        "type": "object",
        "properties": {
          "echoId": {
            "title": "Echoid",
            "type": "string"
          }
        },
        "description": "Used for the `delete echo` command."
      },
      "Echo": {
        "title": "Echo",
        "required": ["id", "sourceFilePath", "mediaType"],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "displayName": {
            "title": "Displayname",
            "type": "string"
          },
          "sourceFilePath": {
            "title": "Sourcefilepath",
            "type": "string"
          },
          "sourceYoutubeUrl": {
            "title": "Sourceyoutubeurl",
            "type": "string"
          },
          "mediaType": {
            "title": "Mediatype",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "completedTranscriptionAt": {
            "title": "Completedtranscriptionat",
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Represents an audio file that can be transcribed."
      },
      "GetEchoConfig": {
        "title": "GetEchoConfig",
        "required": ["echoId"],
        "type": "object",
        "properties": {
          "echoId": {
            "title": "Echoid",
            "type": "string"
          },
          "includeSegments": {
            "title": "Includesegments",
            "type": "boolean",
            "default": false
          }
        },
        "description": "Used for the `get echo` command."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
